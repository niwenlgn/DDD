<#@ template debug="false" hostspecific="True" language="C#" #>
<#@include file="$(ProjectDir)\Manager.ttinclude"#>  
<# var manager = Manager.Create(Host, GenerationEnvironment); #>  
<#@ assembly name="System.Core" #>
<#@ Assembly Name="$(ProjectDir)\bin\Debug\EntityFramework.dll" #>
<#@ Assembly Name="$(ProjectDir)\bin\Debug\Template.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.Entity" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Linq.Expressions" #>
<#@ import namespace="GenCodeTemplate" #>
<#@ output extension=".cs" #>

<#  
    string[] tbNames= {"sys_button","sys_role","sys_power","sys_icon"};//多表用，分割如a,b,c
    string nspace=TempHelper.nspace+".Repository";
    string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");  
    string projectPath = Host.ResolveAssemblyReference("$(ProjectDir)");  
    foreach(var tbName in tbNames){
        List<db_column> list = TempHelper.GetCloumn(tbName);
        manager.StartNewFile( projectPath+@"Repository\"+tbName+"Repository.cs");
#>
/*
 * 说明：此文件来源于模板自动生成，有些可能需人工修改
 *       如果重新生成可能会覆盖此文件需要注意 
 *       有自定义的方法需加入请使用分布类partial来实现
 * 描述:实体类 对应的实体为:<#= tbName#>
 * Author:Ysy
 * Date:<#=DateTime.Now.ToShortDateString() #>
 * Source:T4模板
 * Copyright：Ysy
 */

using DDD.Entities;
using DDD.IRepository;
using DDD.DTO;
using Microsoft.EntityFrameworkCore;

namespace <#=            nspace #>
{
	
	public class <#=            tbName #>Repository : BaseRepository<<#=            tbName #>>,I<#=            tbName #>Repository
    {
        private DbContext _dbcontext;
        private DbSet<<#=            tbName #>> _<#=            tbName #>;
        public <#=            tbName #>Repository(IUnitOfWork uow)
         : base(uow)
        {
            _dbcontext = (uow as UnitOfWork)._dbcontext;
            _<#=            tbName #> = _dbcontext.Set<<#=            tbName #>>();
        }
    }

}
	

<#    } #>
<#  manager.EndBlock(); #> 
<# manager.Process(true); #>  