/**********************************************************************
 * 文件名：        MyJsonZtree.cs
 * 描述：          Ztree的json数据格式的生成类
 * 作者:           Sammy
 * 日期:           2016-09-09
 * 说明：          通过DataTable生成Ztree所需的Json格式
**********************************************************************/
using System;
using System.Collections.Generic;
using System.Web;
using System.Data;
using System.Text;

/// <summary>
/// Ztree 的摘要说明
/// </summary>
namespace MyUtility
{
    public class MyJsonZtree
    {
        // #region 根据DataTable生成Ztree Json树结构
        StringBuilder result = new StringBuilder();
        StringBuilder sb = new StringBuilder();
        bool l_b = true;
        /// <summary>
        /// 根据DataTable生成Ztree Json树结构
        /// </summary>
        /// <param name="tabel">数据源</param>
        /// <param name="idCol">ID列</param>
        /// <param name="txtCol">Text列</param>
        /// <param name="url">节点Url</param>
        /// <param name="rela">关系字段</param>
        /// <param name="pId">父ID</param>
        public string GetTreeJsonByTable(DataTable tabel, string idCol, string txtCol, string url, string rela, string chk, object pId)
        {
            result.Append(sb.ToString());
            //sb.Clear();
            sb.Remove(0, sb.Length);
            if (tabel.Rows.Count > 0)
            {
                sb.Append("[");
                string filer = string.Format("{0}='{1}'", rela, pId);
                DataRow[] rows = tabel.Select(filer);
                if (rows.Length > 0)
                {
                    foreach (DataRow row in rows)
                    {
                        sb.Append("{\"id\":\"" + row[idCol] + "\",\"name\":\"" + row[txtCol] + "\",\"attributes\":\"" + row[url] + "\",\"checked\":" + row[chk]);//+ "\",\"state\":\"open\"");
                        if (l_b == true)
                        {
                            sb.Append(",\"open\":\"true\"");
                            l_b = false;
                        }
                        if (tabel.Select(string.Format("{0}='{1}'", rela, row[idCol])).Length > 0)
                        {
                            //sb.Append(",\"state\":\"closed\"");
                            sb.Append(",\"children\":");
                            GetTreeJsonByTable(tabel, idCol, txtCol, url, rela, chk, row[idCol]);
                            result.Append(sb.ToString());
                            //sb.Clear();
                            sb.Remove(0, sb.Length);
                        }
                        else
                        {
                            //sb.Append(",\"state\":\"open\"");
                        }
                        result.Append(sb.ToString());
                        //sb.Clear();
                        sb.Remove(0, sb.Length);
                        sb.Append("},");
                    }
                    sb = sb.Remove(sb.Length - 1, 1);
                }
                sb.Append("]");
                result.Append(sb.ToString());
                //sb.Clear();
                sb.Remove(0, sb.Length);
            }
            return result.ToString();
        }
        // #endregion 
    }
}