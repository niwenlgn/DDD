#pragma checksum "D:\DDD\DDD_core\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "10d35ffc713c19f7e935b156122198b00e2e8e0b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
#line 1 "D:\DDD\DDD_core\Views\Home\Index.cshtml"
using System.Linq;

#line default
#line hidden
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\DDD\DDD_core\Views\_ViewImports.cshtml"
using DDD_core;

#line default
#line hidden
#line 2 "D:\DDD\DDD_core\Views\_ViewImports.cshtml"
using DDD_core.Models;

#line default
#line hidden
#line 2 "D:\DDD\DDD_core\Views\Home\Index.cshtml"
using DDD.DTO;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"10d35ffc713c19f7e935b156122198b00e2e8e0b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50e7282777108b3b189b0c786b8b0240ff42b83b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(45, 25, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(70, 153, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4021d618d6ad4b8b922e7a3972cd1b9d", async() => {
                BeginContext(76, 140, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Index</title>\r\n\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(223, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(225, 7388, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8caf0f29b8a24373ae472c71a74395e4", async() => {
                BeginContext(231, 221, true);
                WriteLiteral("\r\n    <div id=\"app\">\r\n        <el-container>\r\n            <el-header>\r\n                <table style=\"width: 100%\">\r\n                    <tr>\r\n                        <td style=\"width: 135px\">\r\n                            ");
                EndContext();
                BeginContext(452, 31, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0104595cae4347d7ae630e4ad9948c56", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(483, 262, true);
                WriteLiteral(@"
                        </td>
                        <td style="" width: 600px; height: 50px; text-align: right;
                                    line-height: 60px; color: #fff; font-size: 20px;"">
                            <span style=""font-size:30px"">");
                EndContext();
                BeginContext(746, 23, false);
#line 26 "D:\DDD\DDD_core\Views\Home\Index.cshtml"
                                                    Write(ViewData["system_name"]);

#line default
#line hidden
                EndContext();
                BeginContext(769, 407, true);
                WriteLiteral(@"</span>
                        </td>
                        <td style=""margin-top: -24px;  margin-left: 330px; color: #fff;text-align:right;"">
                            当前用户：{{username}}
                        <td style=""width:20px"" />
                        <td style=""margin-top: -31px;  margin-left: 250px;color: #fff; width:100px; text-align:left;"">
                            <el-dropdown ");
                EndContext();
                BeginContext(1177, 991, true);
                WriteLiteral(@"@command=""handleCommand"">
                                <span class=""el-dropdown-link"">
                                    <i class=""el-icon-user-solid""></i>
                                </span>
                                <el-dropdown-menu slot=""dropdown"">
                                    <el-dropdown-item disabled command=""个人设置"">个人设置</el-dropdown-item>
                                    <el-dropdown-item disabled command=""个人设置"">密码修改</el-dropdown-item>
                                    <el-dropdown-item command=""退出登录"">退出登录</el-dropdown-item>
                                </el-dropdown-menu>
                            </el-dropdown>
                        </td>
                    </tr>
                </table>
            </el-header>
            <el-container>
                <el-aside width=""200px"">

                    <el-menu :default-active=""2""
                             class=""el-menu-vertical-demo""
                             ");
                EndContext();
                BeginContext(2169, 49, true);
                WriteLiteral("@open=\"handleOpen\"\r\n                             ");
                EndContext();
                BeginContext(2219, 2662, true);
                WriteLiteral(@"@close=""handleClose""
                             background-color=""#222d32""
                             text-color=""#fff""
                             active-text-color=""#ffd04b""
                             style=""height:100%;""
                             unique-opened router>
                        <div v-for=""(item,index) in navList"" :key=""index"">
                            <div v-if=""item.children && item.children.length>0"">
                                <el-submenu :index=""item.id"">
                                    <template slot=""title"">
                                        {{item.text}}
                                    </template>
                                    <div v-for=""(item_2,index_2) in item.children"" :key=""index_2"">
                                        <div v-if=""item_2.children && item_2.children.length>0"">
                                            <el-submenu :index=""item_2.id"">
                                                <template slot=""title"">
  ");
                WriteLiteral(@"                                                  {{item_2.text}}
                                                </template>
                                                <div v-for=""(item_3,index_3) in item_2.children"" :key=""index_3"">
                                                    <div v-if=""item_3.children && item_3.children.length>0"">
                                                        <el-submenu :index=""item_3.id"">
                                                            <template slot=""title"">
                                                                {{item_3.text}}
                                                            </template>
                                                            <div v-for=""(item_4,index_4) in item_3.children"" :key=""index_4"">
                                                                <div v-if=""item_4.children && item_4.children.length>0"">
                                                                    <el-submenu :index=""item_4.i");
                WriteLiteral(@"d"">
                                                                        <template slot=""title"">
                                                                            {{item_4.text}}
                                                                        </template>
                                                                    </el-submenu>
                                                                </div>
                                                                <div v-else>
                                                                    <el-menu-item :index=""item_4.id"" ");
                EndContext();
                BeginContext(4882, 738, true);
                WriteLiteral(@"@click=""addTab( item_4.path )"">
                                                                        <i :class=""item_4.iconCls""></i>
                                                                        {{item_4.text}}
                                                                    </el-menu-item>
                                                                </div>
                                                            </div>
                                                        </el-submenu>
                                                    </div>
                                                    <div v-else>
                                                        <el-menu-item :index=""item_3.id"" ");
                EndContext();
                BeginContext(5621, 630, true);
                WriteLiteral(@"@click=""addTab( item_3.path )"">
                                                            <i :class=""item_3.iconCls""></i>
                                                            {{item_3.text}}
                                                        </el-menu-item>
                                                    </div>
                                                </div>
                                            </el-submenu>
                                        </div>
                                        <div v-else>
                                            <el-menu-item :index=""item_2.id"" ");
                EndContext();
                BeginContext(6252, 520, true);
                WriteLiteral(@"@click=""addTab( item_2.path )"">
                                                <i :class=""item_2.iconCls""></i>
                                                {{item_2.text}}
                                            </el-menu-item>
                                        </div>
                                    </div>
                                </el-submenu>
                            </div>
                            <div v-else>
                                <el-menu-item :index=""item.id"" ");
                EndContext();
                BeginContext(6773, 833, true);
                WriteLiteral(@"@click=""addTab( item.path )"">
                                    <i :class=""item.iconCls""></i>
                                    {{item.text}}
                                </el-menu-item>
                            </div>
                        </div>
                    </el-menu>

                </el-aside>
                <el-main style=""width:100%;height:100%;"">
                    <div style=""width:100%;height:100%; text-align:center;position:relative;"">
                        <iframe id=""frmWorkArea"" name=""frmWorkArea"" src="""" sandbox=""allow-top-navigation allow-same-origin allow-forms allow-scripts"" style=""width:100%; height:100%; "" frameborder=""0"" scrolling=""yes""></iframe>
                    </div>
                </el-main>
            </el-container>
        </el-container>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7613, 107, true);
            WriteLiteral("\r\n</html>\r\n<script>\r\n    var app = new Vue({\r\n        el: \"#app\",\r\n        data: {\r\n            username: \'");
            EndContext();
            BeginContext(7721, 30, false);
#line 135 "D:\DDD\DDD_core\Views\Home\Index.cshtml"
                  Write(Html.Raw(ViewData["username"]));

#line default
#line hidden
            EndContext();
            BeginContext(7751, 37, true);
            WriteLiteral("\',\r\n            navList: JSON.parse(\'");
            EndContext();
            BeginContext(7789, 30, false);
#line 136 "D:\DDD\DDD_core\Views\Home\Index.cshtml"
                            Write(Html.Raw(ViewData["jsonmenu"]));

#line default
#line hidden
            EndContext();
            BeginContext(7819, 560, true);
            WriteLiteral(@"'.replace(/&quot;/g, ""\"""")),
        },
        methods: {
            handleOpen(key, keyPath) {
                console.log(key, keyPath);
            },
            handleClose(key, keyPath) {
                console.log(key, keyPath);
            },
            addTab(url) {
                if (url != """") {      
                    $(""#frmWorkArea"").attr(""src"", url);
                }
            },
            handleCommand(command) {
                alert(command + '功能正在完善');
            }
        }
    });      
    
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
