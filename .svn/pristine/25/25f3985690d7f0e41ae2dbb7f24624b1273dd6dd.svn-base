using DDD.Entities;
using Microsoft.EntityFrameworkCore;
using System;
using System.Linq;
using System.Reflection;

namespace DDD.Data
{
    public class oaEntities : DbContext
    {
        public oaEntities(DbContextOptions<oaEntities> options)
            : base(options)
        {
            
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            var typesToRegister = Assembly.GetExecutingAssembly().GetTypes()
                .Where(q => q.GetInterface(typeof(IEntityTypeConfiguration<>).FullName) != null);

            foreach (var type in typesToRegister)
            {

                dynamic configurationInstance = Activator.CreateInstance(type);
                modelBuilder.ApplyConfiguration(configurationInstance);
            }
            base.OnModelCreating(modelBuilder);
        }

        public DbSet<sys_user> sys_user { get; set; }
        /// <summary>
        /// 系统菜单
        /// </summary>
        public DbSet<sys_menu> sys_menu { get; set; }
        /// <summary>
        /// 账号目录
        /// </summary>
        public DbSet<sys_account> sys_account { get; set; }
        /// <summary>
        /// 角色表
        /// </summary>
        public DbSet<sys_role> sys_role { get; set; }
        /// <summary>
        /// 角色权限
        /// </summary>
        public DbSet<sys_power> sys_power { get; set; }
        /// <summary>
        /// 图标
        /// </summary>
        public DbSet<sys_icon> sys_icon { get; set; }
        /// <summary>
        /// 功能按钮
        /// </summary>
        public DbSet<sys_button> sys_button { get; set; }
 
    }
}
